status:
    path: /api/status
    defaults: { _controller: contao_manager.controller.status }
    methods: [GET]

login:
    path:     /api/session
    defaults: { _controller: contao_manager.controller.session:login }
    methods:  [POST]

logout:
    path:     /api/session
    defaults: { _controller: contao_manager.controller.session:logout }
    methods:  [DELETE]


#############
#   Users   #
#############

users_list:
    path:     /api/users
    defaults: { _controller: contao_manager.controller.users:listUsers }
    methods:  [GET]

users_create:
    path:     /api/users
    defaults: { _controller: contao_manager.controller.users:createUser }
    methods:  [POST]

user_get:
    path:     /api/users/{username}
    defaults: { _controller: contao_manager.controller.users:retrieveUser }
    methods:  [GET]

user_put:
    path:     /api/users/{username}
    defaults: { _controller: contao_manager.controller.users:replaceUser }
    methods:  [PUT]

user_delete:
    path:     /api/users/{username}
    defaults: { _controller: contao_manager.controller.users:deleteUser }
    methods:  [DELETE]



#####################
#   Configuration   #
#####################

config_manager_get:
    path:     /api/config/manager
    defaults: { _controller: contao_manager.controller.config_manager:getAction }
    methods:  [GET]

config_manager_put:
    path:     /api/config/manager
    defaults: { _controller: contao_manager.controller.config_manager:putAction }
    methods:  [PUT]

config_manager_patch:
    path:     /api/config/manager
    defaults: { _controller: contao_manager.controller.config_manager:patchAction }
    methods:  [PATCH]

config_auth_get:
    path:     /api/config/auth
    defaults: { _controller: contao_manager.controller.config_auth:getAction }
    methods:  [GET]

config_auth_put:
    path:     /api/config/auth
    defaults: { _controller: contao_manager.controller.config_auth:putAction }
    methods:  [PUT]

config_auth_patch:
    path:     /api/config/auth
    defaults: { _controller: contao_manager.controller.config_auth:patchAction }
    methods:  [PATCH]

config_auth_github:
    path:     /api/config/auth/github-oauth
    defaults: { _controller: contao_manager.controller.config_auth:putGithubToken }
    methods:  [PUT]

config_composer_get:
    path:     /api/config/composer
    defaults: { _controller: contao_manager.controller.config_composer:getAction }
    methods:  [GET]

config_composer_put:
    path:     /api/config/composer
    defaults: { _controller: contao_manager.controller.config_composer:putAction }
    methods:  [PUT]

config_composer_patch:
    path:     /api/config/composer
    defaults: { _controller: contao_manager.controller.config_composer:patchAction }
    methods:  [PATCH]


#############
#   Tasks   #
#############

task_get:
    path:     /api/task
    defaults: { _controller: contao_manager.controller.tasks:getTask }
    methods:  [GET]

task_put:
    path:     /api/task
    defaults: { _controller: contao_manager.controller.tasks:putTask }
    methods:  [PUT]

task_delete:
    path:     /api/task
    defaults: { _controller: contao_manager.controller.tasks:deleteTask }
    methods:  [DELETE]

task_status:
    path:     /api/task/status
    defaults: { _controller: contao_manager.controller.tasks:putTaskStatus }
    methods:  [PUT]


#################
#   Log Files   #
#################

logs_list:
    path:     /api/logs
    defaults: { _controller: contao_manager.controller.logs:listFiles }
    methods:  [GET]

log_get:
    path:     /api/logs/{filename}
    defaults: { _controller: contao_manager.controller.logs:retrieveFile }
    methods:  [GET]

log_delete:
    path:     /api/logs/{filename}
    defaults: { _controller: contao_manager.controller.logs:deleteFile }
    methods:  [DELETE]


###############
#   Tenside   #
###############

install_create_project:
    path:     /api/install/create-project
    defaults: { _controller: TensideCoreBundle:InstallProject:createProject }
    methods:  [POST]

packages_get:
    path:     /api/packages
    defaults: { _controller: TensideCoreBundle:Package:packageList }
    methods:  [GET]

constraint_check:
    path:     /api/constraint
    defaults: { _controller: TensideCoreBundle:VersionConstraint:checkVersionConstraint }
    methods:  [POST]
